#nullable enable
NuGet.Commands.UpdateSourceArgs.AllowInsecureConnections.set -> void
NuGet.Commands.UpdateSourceArgs.AllowInsecureConnections.get -> bool
NuGet.Commands.AddSourceArgs.AllowInsecureConnections.set -> void
NuGet.Commands.AddSourceArgs.AllowInsecureConnections.get -> bool
~NuGet.Commands.PackageSpecificWarningProperties.AddRangeOfCodes(System.Collections.Immutable.ImmutableArray<NuGet.Common.NuGetLogCode> codes, string libraryId, NuGet.Frameworks.NuGetFramework framework) -> void
~static NuGet.Commands.MSBuildRestoreUtility.GetSdkAnalysisLevel(string sdkAnalysisLevel) -> NuGet.Versioning.NuGetVersion
~static NuGet.Commands.MSBuildRestoreUtility.GetUsingMicrosoftNETSdk(string usingMicrosoftNETSdk) -> bool
NuGet.Commands.RestoreCommandProvidersCache.GetOrCreate(string! globalPackagesPath, System.Collections.Generic.IReadOnlyList<string!>! fallbackPackagesPaths, System.Collections.Generic.IReadOnlyList<NuGet.Protocol.Core.Types.SourceRepository!>! packageSources, System.Collections.Generic.IReadOnlyList<NuGet.Protocol.Core.Types.SourceRepository!>! auditSources, NuGet.Protocol.Core.Types.SourceCacheContext! cacheContext, NuGet.Common.ILogger! log, bool updateLastAccess) -> NuGet.Commands.RestoreCommandProviders!
