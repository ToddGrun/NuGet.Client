#nullable enable
NuGet.ProjectModel.LockFileReadFlags
NuGet.ProjectModel.LockFileReadFlags.All = NuGet.ProjectModel.LockFileReadFlags.Libraries | NuGet.ProjectModel.LockFileReadFlags.Targets | NuGet.ProjectModel.LockFileReadFlags.ProjectFileDependencyGroups | NuGet.ProjectModel.LockFileReadFlags.PackageFolders | NuGet.ProjectModel.LockFileReadFlags.PackageSpec | NuGet.ProjectModel.LockFileReadFlags.CentralTransitiveDependencyGroups | NuGet.ProjectModel.LockFileReadFlags.LogMessages -> NuGet.ProjectModel.LockFileReadFlags
NuGet.ProjectModel.LockFileReadFlags.CentralTransitiveDependencyGroups = 32 -> NuGet.ProjectModel.LockFileReadFlags
NuGet.ProjectModel.LockFileReadFlags.Libraries = 1 -> NuGet.ProjectModel.LockFileReadFlags
NuGet.ProjectModel.LockFileReadFlags.LogMessages = 64 -> NuGet.ProjectModel.LockFileReadFlags
NuGet.ProjectModel.LockFileReadFlags.PackageFolders = 8 -> NuGet.ProjectModel.LockFileReadFlags
NuGet.ProjectModel.LockFileReadFlags.PackageSpec = 16 -> NuGet.ProjectModel.LockFileReadFlags
NuGet.ProjectModel.LockFileReadFlags.ProjectFileDependencyGroups = 4 -> NuGet.ProjectModel.LockFileReadFlags
NuGet.ProjectModel.LockFileReadFlags.Targets = 2 -> NuGet.ProjectModel.LockFileReadFlags
NuGet.ProjectModel.TargetFrameworkInformation.AssetTargetFallback.init -> void
NuGet.ProjectModel.TargetFrameworkInformation.Warn.init -> void
~NuGet.ProjectModel.CentralTransitiveDependencyGroup.CentralTransitiveDependencyGroup(NuGet.Frameworks.NuGetFramework framework, System.Collections.Generic.IList<NuGet.LibraryModel.LibraryDependency> transitiveDependencies) -> void
~NuGet.ProjectModel.CentralTransitiveDependencyGroup.TransitiveDependencies.get -> System.Collections.Generic.IList<NuGet.LibraryModel.LibraryDependency>
~NuGet.ProjectModel.TargetFrameworkInformation.CentralPackageVersions.get -> System.Collections.Immutable.ImmutableDictionary<string, NuGet.LibraryModel.CentralPackageVersion>
~NuGet.ProjectModel.TargetFrameworkInformation.CentralPackageVersions.init -> void
~NuGet.ProjectModel.TargetFrameworkInformation.Dependencies.get -> System.Collections.Immutable.ImmutableArray<NuGet.LibraryModel.LibraryDependency>
~NuGet.ProjectModel.TargetFrameworkInformation.Dependencies.init -> void
~NuGet.ProjectModel.TargetFrameworkInformation.DownloadDependencies.get -> System.Collections.Immutable.ImmutableArray<NuGet.LibraryModel.DownloadDependency>
~NuGet.ProjectModel.TargetFrameworkInformation.DownloadDependencies.init -> void
~NuGet.ProjectModel.TargetFrameworkInformation.FrameworkName.init -> void
~NuGet.ProjectModel.TargetFrameworkInformation.FrameworkReferences.get -> System.Collections.Immutable.ImmutableHashSet<NuGet.LibraryModel.FrameworkDependency>
~NuGet.ProjectModel.TargetFrameworkInformation.FrameworkReferences.init -> void
~NuGet.ProjectModel.TargetFrameworkInformation.Imports.get -> System.Collections.Immutable.ImmutableArray<NuGet.Frameworks.NuGetFramework>
~NuGet.ProjectModel.TargetFrameworkInformation.Imports.init -> void
~NuGet.ProjectModel.TargetFrameworkInformation.RuntimeIdentifierGraphPath.init -> void
~NuGet.ProjectModel.TargetFrameworkInformation.TargetAlias.init -> void
~NuGet.ProjectModel.TargetFrameworkInformation.WithAssetTargetFallback(bool assetTargetFallback) -> NuGet.ProjectModel.TargetFrameworkInformation
~NuGet.ProjectModel.TargetFrameworkInformation.WithCentralPackageVersions(System.Collections.Immutable.ImmutableDictionary<string, NuGet.LibraryModel.CentralPackageVersion> versions) -> NuGet.ProjectModel.TargetFrameworkInformation
~NuGet.ProjectModel.TargetFrameworkInformation.WithDependencies(System.Collections.Immutable.ImmutableArray<NuGet.LibraryModel.LibraryDependency> dependencies) -> NuGet.ProjectModel.TargetFrameworkInformation
~NuGet.ProjectModel.TargetFrameworkInformation.WithDownloadDependencies(System.Collections.Immutable.ImmutableArray<NuGet.LibraryModel.DownloadDependency> dependencies) -> NuGet.ProjectModel.TargetFrameworkInformation
~NuGet.ProjectModel.TargetFrameworkInformation.WithFrameworkName(NuGet.Frameworks.NuGetFramework frameworkName) -> NuGet.ProjectModel.TargetFrameworkInformation
~NuGet.ProjectModel.TargetFrameworkInformation.WithFrameworkReferences(System.Collections.Immutable.ImmutableHashSet<NuGet.LibraryModel.FrameworkDependency> references) -> NuGet.ProjectModel.TargetFrameworkInformation
~NuGet.ProjectModel.TargetFrameworkInformation.WithImports(System.Collections.Immutable.ImmutableArray<NuGet.Frameworks.NuGetFramework> imports) -> NuGet.ProjectModel.TargetFrameworkInformation
~NuGet.ProjectModel.TargetFrameworkInformation.WithRuntimeIdentifierGraphPath(string runtimeIdentifierGraphPath) -> NuGet.ProjectModel.TargetFrameworkInformation
~NuGet.ProjectModel.TargetFrameworkInformation.WithTargetAlias(string targetAlias) -> NuGet.ProjectModel.TargetFrameworkInformation
~NuGet.ProjectModel.TargetFrameworkInformation.WithWarn(bool warn) -> NuGet.ProjectModel.TargetFrameworkInformation
~static NuGet.ProjectModel.LockFileUtilities.GetLockFile(string lockFilePath, NuGet.Common.ILogger logger, NuGet.ProjectModel.LockFileReadFlags flags) -> NuGet.ProjectModel.LockFile
~NuGet.ProjectModel.ProjectRestoreMetadata.SdkAnalysisLevel.get -> NuGet.Versioning.NuGetVersion
~NuGet.ProjectModel.ProjectRestoreMetadata.SdkAnalysisLevel.set -> void
NuGet.ProjectModel.ProjectRestoreMetadata.UsingMicrosoftNETSdk.get -> bool
NuGet.ProjectModel.ProjectRestoreMetadata.UsingMicrosoftNETSdk.set -> void
~static NuGet.ProjectModel.TargetFrameworkInformation.EmptyCentralPackageVersions -> System.Collections.Immutable.ImmutableDictionary<string, NuGet.LibraryModel.CentralPackageVersion>
~static NuGet.ProjectModel.WarningProperties.GetWarningProperties(string treatWarningsAsErrors, System.Collections.Immutable.ImmutableArray<NuGet.Common.NuGetLogCode> warningsAsErrors, System.Collections.Immutable.ImmutableArray<NuGet.Common.NuGetLogCode> noWarn) -> NuGet.ProjectModel.WarningProperties
~static NuGet.ProjectModel.WarningProperties.GetWarningProperties(string treatWarningsAsErrors, System.Collections.Immutable.ImmutableArray<NuGet.Common.NuGetLogCode> warningsAsErrors, System.Collections.Immutable.ImmutableArray<NuGet.Common.NuGetLogCode> noWarn, System.Collections.Immutable.ImmutableArray<NuGet.Common.NuGetLogCode> warningsNotAsErrors) -> NuGet.ProjectModel.WarningProperties
